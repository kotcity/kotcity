buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
    }
}

plugins {
    id 'edu.sc.seis.launch4j' version '2.4.3'
}

group 'com.kotcity'
version '0.46'

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "kotcity.ui.LaunchScreenKt"
targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'no.tornado:tornadofx:1.7.15'
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'
    compile 'com.github.davidmoten:rtree:0.8.0.4'
    compile 'com.github.kizitonwose.time:time:1.0.1'
    compile 'javax.vecmath:vecmath:1.5.2'

    compile 'com.github.debop:koda-time:1.2.1'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21'

    compile 'com.github.ben-manes.caffeine:caffeine:2.6.1'

    compile 'com.natpryce:konfig:1.6.1.0'

    // Optional extensions
    compile 'com.github.ben-manes.caffeine:guava:2.6.1'
    compile 'com.github.ben-manes.caffeine:jcache:2.6.1'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M4'
    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M4'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'kotcity.ui.LaunchScreenKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

junitPlatform {
    details 'tree'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'edu.sc.seis.launch4j'

launch4j {
    outputDir = "kotcity-pre-alpha"
    mainClassName = 'kotcity.ui.LaunchScreenKt'
    icon = "${projectDir}/icons/kotcity.ico"
    jreMinVersion = 1.8
}

task copyAssets(type: Copy) {
    from 'assets'
    into 'build/kotcity-pre-alpha/assets'
}

task copyDistZipAssets(type: Copy) {
    from 'assets'
    into 'build/libs/assets'
}

task copyShell(type: Copy) {
    from 'shell'
    into 'build/kotcity-pre-alpha/'
}

createExe.dependsOn copyAssets
createExe.dependsOn copyShell
createExe.dependsOn shadowJar
createExe.dependsOn build
shadowDistZip.dependsOn copyDistZipAssets
shadowDistZip.dependsOn copyShell

task dist {
    doLast {
        createExe
        println("Distribution in build/kotcity-pre-alpha!")
    }
}

dist.dependsOn createExe
